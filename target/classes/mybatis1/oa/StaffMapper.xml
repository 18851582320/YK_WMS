<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StaffMapper">
	
	<!--表名 -->
	<sql id="tableName">
		OA_STAFF
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		NAME,	
		NAME_EN,	
		BIANMA,	
		DEPARTMENT_ID,
		IdCard,	
		FUNCTIONS,	
		TEL,	
		EMAIL,	
		SEX,	
		BIRTHDAY,	
		NATION,	
		JOBTYPE,	
		JOBJOINTIME,	
		FADDRESS,	
		POLITICAL,	
		PJOINTIME,	
		SFID,	
		MARITAL,	
		DJOINTIME,	
		POST,	
		POJOINTIME,	
		EDUCATION,	
		SCHOOL,	
		MAJOR,	
		FTITLE,	
		CERTIFICATE,	
		CONTRACTLENGTH,	
		CSTARTTIME,	
		CENDTIME,	
		ADDRESS,	
		USER_ID,	
		BZ,	
		STAFF_ID,
		teamId,
		higherUser,
		manHourRate,
		dutyId
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{NAME},	
		#{NAME_EN},	
		#{BIANMA},	
		#{DEPARTMENT_ID},	
		#{IdCard},	
		#{FUNCTIONS},	
		#{TEL},	
		#{EMAIL},	
		#{SEX},	
		#{BIRTHDAY},	
		#{NATION},	
		#{JOBTYPE},	
		#{JOBJOINTIME},	
		#{FADDRESS},	
		#{POLITICAL},	
		#{PJOINTIME},	
		#{SFID},	
		#{MARITAL},	
		#{DJOINTIME},	
		#{POST},	
		#{POJOINTIME},	
		#{EDUCATION},	
		#{SCHOOL},	
		#{MAJOR},	
		#{FTITLE},	
		#{CERTIFICATE},	
		#{CONTRACTLENGTH},	
		#{CSTARTTIME},	
		#{CENDTIME},	
		#{ADDRESS},	
		#{USER_ID},	
		#{BZ},	
		#{STAFF_ID},
		#{teamId},
		#{higherUser},
		#{manHourRate},
		#{dutyId}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STAFF_ID = #{STAFF_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include> 
		set 
			NAME = #{NAME},
			NAME_EN = #{NAME_EN},
			BIANMA = #{BIANMA},
			DEPARTMENT_ID = #{DEPARTMENT_ID},
			IdCard=#{IdCard},
			FUNCTIONS = #{FUNCTIONS},
			TEL = #{TEL},
			EMAIL = #{EMAIL},
			SEX = #{SEX},
			BIRTHDAY = #{BIRTHDAY},
			NATION = #{NATION},
			JOBTYPE = #{JOBTYPE},
			JOBJOINTIME = #{JOBJOINTIME},
			FADDRESS = #{FADDRESS},
			POLITICAL = #{POLITICAL},
			PJOINTIME = #{PJOINTIME},
			SFID = #{SFID},
			MARITAL = #{MARITAL},
			DJOINTIME = #{DJOINTIME},
			POST = #{POST},
			POJOINTIME = #{POJOINTIME},
			EDUCATION = #{EDUCATION},
			SCHOOL = #{SCHOOL},
			MAJOR = #{MAJOR},
			FTITLE = #{FTITLE},
			CERTIFICATE = #{CERTIFICATE},
			CONTRACTLENGTH = #{CONTRACTLENGTH},
			CSTARTTIME = #{CSTARTTIME},
			CENDTIME = #{CENDTIME},
			ADDRESS = #{ADDRESS},
			BZ = #{BZ},
			USER_ID = #{USER_ID},
			teamId = #{teamId},
			higherUser = #{higherUser},
			manHourRate = #{manHourRate},
			dutyId = #{dutyId}
		where 
			STAFF_ID = #{STAFF_ID}
	</update>
	
	
	<update id="editAppInfo" parameterType="pd">
		update
		<include refid="tableName"></include> 
		set 
			id = #{id},
			token = #{token},
			clientid = #{clientid},
			appid = #{appid},
			appkey=#{appkey}
		where 
			STAFF_ID = #{STAFF_ID}
	</update>
	
	
	<select id="findAppInfo" parameterType="pd" resultType="pd">
		select
			a.id,
			a.token,
			a.clientid,
			a.appid,	
			a.appkey	
		from 
		<include refid="tableName"></include> a 
		where 
			STAFF_ID = #{STAFF_ID}
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,
			a.BZ,	
			b.NAME as DEPARTMENT_NAME,
			c.USERNAME,
			c.ROLE_ID,
			a.teamId,
			a.higherUser,
			a.manHourRate,
			a.dutyId,
			d.teamName,
			e.dutyName
		from 
		<include refid="tableName"></include> a 
		left join OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join sys_user c on a.USER_ID=c.USER_ID 
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId 
		where 
			STAFF_ID = #{STAFF_ID}
	</select>
	
	<select id="findByUserId" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			a.teamId,
			a.dutyId
		from 
		<include refid="tableName"></include> a 
		where 
			USER_ID = #{USER_ID}
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findByBianMa" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			BIANMA = #{BIANMA}
	</select>
	
	<select id="findByName" parameterType="pd" resultType="pd">
		select top 1 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			NAME = #{NAME}
	</select>
	
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUSERNAME" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			c.USERNAME,
			c.ROLE_ID,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName,
			isnull(a.higherUser,'') as higherUser,
			isnull(f.NAME,'') as higherUserName
		from 
		<include refid="tableName"></include> a 
		left join OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join sys_user c on a.USER_ID=c.USER_ID 
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId
		left join OA_STAFF f on a.higherUser=f.STAFF_ID  
		where c.USERNAME=#{USERNAME}
	</select>
	
	<!-- 通过IdCard卡号获取数据 -->
	<select id="findByIdCard" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			c.USERNAME,
			c.ROLE_ID,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName
		from 
		<include refid="tableName"></include> a 
		left join OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join sys_user c on a.USER_ID=c.USER_ID
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId  
		where a.IdCard=#{IdCard}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName
		from 
		<include refid="tableName"></include> a 
		LEFT JOIN OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId 
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					a.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					a.NAME_EN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					a.BIANMA LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					b.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or
					and d.teamName=LIKE CONCAT(CONCAT('%', #{teamName}),'%')
					or
					and e.dutyName=LIKE CONCAT(CONCAT('%', #{dutyName}),'%')
				)
		</if>
		<if test="pd.DEPARTMENT_ID!=null and pd.DEPARTMENT_ID!=''"><!-- 部门检索 -->
			and a.DEPARTMENT_ID=${pd.DEPARTMENT_ID}
		</if>
	</select>
	
	
	<!-- 列表 -->
	<select id="querylistPage" parameterType="page" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			c.USERNAME,
			c.ROLE_ID,
			a.BZ,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName,
			f.NAME as higherUserName
		from 
		<include refid="tableName"></include> a 
		left join OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join sys_user c on a.USER_ID=c.USER_ID
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId
		left join OA_STAFF f on a.higherUser=f.STAFF_ID 
		where 1=1
		<choose>
			<when test="pd.isAccurateQuery!= null and pd.isAccurateQuery != '' and pd.isAccurateQuery=='true'">
				<if test="pd.BIANMA!= null and pd.BIANMA != ''">
					and a.BIANMA=#{pd.BIANMA}
				</if>
				<if test="pd.NAME!= null and pd.NAME != ''">
					and a.NAME=#{pd.NAME}
				</if>
				<if test="pd.SEX!= null and pd.SEX != ''">
					and a.SEX=#{pd.SEX}
				</if>
				<if test="pd.DEPARTMENT_NAME!= null and pd.DEPARTMENT_NAME != ''">
					and b.NAME=#{pd.DEPARTMENT_NAME}
				</if>
				<if test="pd.TEL!= null and pd.TEL != ''">
					and a.TEL=#{pd.TEL}
				</if>
				<if test="pd.IdCard!= null and pd.IdCard != ''">
					and a.IdCard=#{pd.IdCard}
				</if>
				<if test="pd.USERNAME!= null and pd.USERNAME != ''">
					and c.USERNAME=#{pd.USERNAME}
				</if>
				<if test="pd.teamName!= null and pd.teamName != ''">
					and d.teamName=#{pd.teamName}
				</if>
				<if test="pd.dutyName!= null and pd.dutyName != ''">
					and e.dutyName=#{pd.dutyName}
				</if>
				<if test="pd.BZ != null and pd.BZ != ''">
					and a.BZ = #{pd.BZ}
				</if>
			</when>
			<otherwise >
				 <if test="pd.BIANMA!= null and pd.BIANMA != ''">
					and a.BIANMA LIKE CONCAT(CONCAT('%', #{pd.BIANMA}),'%')
				</if>
				<if test="pd.NAME!= null and pd.NAME != ''">
					and a.NAME LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				</if>
				<if test="pd.SEX!= null and pd.SEX != ''">
					and a.SEX  LIKE CONCAT(CONCAT('%', #{pd.SEX}),'%')
				</if>
				<if test="pd.DEPARTMENT_NAME!= null and pd.DEPARTMENT_NAME != ''">
					and b.NAME  LIKE CONCAT(CONCAT('%', #{pd.DEPARTMENT_NAME}),'%')
				</if>
				<if test="pd.TEL!= null and pd.TEL != ''">
					and a.TEL  LIKE CONCAT(CONCAT('%', #{pd.TEL}),'%')
				</if>
				<if test="pd.IdCard!= null and pd.IdCard != ''">
					and a.IdCard  LIKE CONCAT(CONCAT('%', #{pd.IdCard}),'%')
				</if>
				<if test="pd.USERNAME!= null and pd.USERNAME != ''">
					and c.USERNAME  LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
				</if>
				<if test="pd.teamName!= null and pd.teamName != ''">
					and d.teamName LIKE CONCAT(CONCAT('%', #{pd.teamName}),'%')
				</if>
				<if test="pd.dutyName!= null and pd.dutyName != ''">
					and e.dutyName LIKE CONCAT(CONCAT('%', #{pd.dutyName}),'%')
				</if>
				<if test="pd.BZ != null and pd.BZ != ''">
					and a.BZ LIKE CONCAT(CONCAT('%', #{pd.BZ}),'%')
				</if>
			</otherwise>
		</choose>
	</select>
	
		<!-- 人员选择 -->
	<select id="listPageSelect" parameterType="page" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.EMAIL,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName,
			f.USERNAME
		from 
		<include refid="tableName"></include> a 
		LEFT JOIN OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId
		left join sys_user f on a.USER_ID=f.USER_ID 
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					a.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					a.NAME_EN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					a.BIANMA LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					b.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					d.teamName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					e.dutyName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or
					f.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.DEPARTMENT_ID!=null and pd.DEPARTMENT_ID!=''"><!-- 部门检索 -->
			and a.DEPARTMENT_ID='${pd.DEPARTMENT_ID}'
		</if>
	</select>
	
	
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			b.NAME as DEPARTMENT_NAME,
			c.USERNAME,
			c.ROLE_ID,
			a.BZ,
			a.teamId,
			a.dutyId,
			d.teamName,
			e.dutyName,
			a.higherUser,
			f.NAME as higherUserName
		from 
		<include refid="tableName"></include> a 
		left join OA_DEPARTMENT b on a.DEPARTMENT_ID = b.DEPARTMENT_ID
		left join sys_user c on a.USER_ID=c.USER_ID
		left join OA_team d on a.teamId=d.teamId 
		left join OA_duty e on a.dutyId=e.dutyId
		left join OA_STAFF f on a.higherUser=f.STAFF_ID
		where 1=1
		<choose>
			<when test="isAccurateQuery!= null and isAccurateQuery != '' and isAccurateQuery=='true'">
				<if test="BIANMA!= null and BIANMA != ''">
					and a.BIANMA=#{BIANMA}
				</if>
				<if test="NAME!= null and NAME != ''">
					and a.NAME=#{NAME}
				</if>
				<if test="SEX!= null and SEX != ''">
					and a.SEX=#{SEX}
				</if>
				<if test="DEPARTMENT_NAME!= null and DEPARTMENT_NAME != ''">
					and b.NAME=#{DEPARTMENT_NAME}
				</if>
				<if test="TEL!= null and TEL != ''">
					and a.TEL=#{TEL}
				</if>
				<if test="IdCard!= null and IdCard != ''">
					and a.IdCard=#{IdCard}
				</if>
				<if test="USERNAME!= null and USERNAME != ''">
					and c.USERNAME=#{USERNAME}
				</if>
				<if test="teamName!= null and teamName != ''">
					and d.teamName=#{teamName}
				</if>
				<if test="dutyName!= null and dutyName != ''">
					and e.dutyName=#{dutyName}
				</if>
				<if test="BZ != null and BZ != ''">
					and a.BZ = #{BZ}
				</if>
			</when>
			<otherwise >
				 <if test="BIANMA!= null and BIANMA != ''">
					and a.BIANMA LIKE CONCAT(CONCAT('%', #{BIANMA}),'%')
				</if>
				<if test="NAME!= null and NAME != ''">
					and a.NAME LIKE CONCAT(CONCAT('%', #{NAME}),'%')
				</if>
				<if test="SEX!= null and SEX != ''">
					and a.SEX  LIKE CONCAT(CONCAT('%', #{SEX}),'%')
				</if>
				<if test="DEPARTMENT_NAME!= null and DEPARTMENT_NAME != ''">
					and b.NAME  LIKE CONCAT(CONCAT('%', #{DEPARTMENT_NAME}),'%')
				</if>
				<if test="TEL!= null and TEL != ''">
					and a.TEL  LIKE CONCAT(CONCAT('%', #{TEL}),'%')
				</if>
				<if test="IdCard!= null and IdCard != ''">
					and a.IdCard  LIKE CONCAT(CONCAT('%', #{IdCard}),'%')
				</if>
				<if test="USERNAME!= null and USERNAME != ''">
					and c.USERNAME  LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
				</if>
				<if test="teamName!= null and teamName != ''">
					and d.teamName LIKE CONCAT(CONCAT('%', #{teamName}),'%')
				</if>
				<if test="dutyName!= null and dutyName != ''">
					and e.dutyName LIKE CONCAT(CONCAT('%', #{dutyName}),'%')
				</if>
				<if test="BZ != null and BZ != ''">
					and a.BZ LIKE CONCAT(CONCAT('%', #{BZ}),'%')
				</if>
			</otherwise>
		</choose>
		
		
		order by a.NAME
		
		
	</select>
	
	
	<select id="listByDept" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard	
		from 
		<include refid="tableName"></include> a 
		where 1=1 and a.DEPARTMENT_ID=#{DEPARTMENT_ID}
	</select>
	
	
	<select id="listForTrackLimit" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard	
		from OA_STAFF a
		left join (
			select limitUser from SYS_trackLimit a
			where a.mainUser=#{mainUser} and a.trackLimitTypeCode=#{trackLimitTypeCode}
		)b on a.STAFF_ID=b.limitUser
		where 1=1 and a.DEPARTMENT_ID=#{DEPARTMENT_ID} and b.limitUser is  null
	</select>
	
	
	<select id="listByUserAndTrackLimitCode" parameterType="pd" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard	
		from OA_STAFF a
		inner join (
			select limitUser 
			from SYS_trackLimit a
			left join OA_STAFF b on a.mainUser=b.STAFF_ID
			left join sys_user c on b.USER_ID=c.USER_ID 
			where c.USERNAME=#{account} and a.trackLimitTypeCode=#{trackLimitTypeCode}
		)b on a.STAFF_ID=b.limitUser
		where 1=1 
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STAFF_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
		and 
			BIANMA != 'admin'
	</delete>
	
	
	<select id="findByIdArray" parameterType="String" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			a.teamId,
			a.dutyId
		from 
		<include refid="tableName"></include> a 
		where 
			STAFF_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	
	
	<select id="findByNameArray" parameterType="String" resultType="pd">
		select
			a.STAFF_ID,
			a.NAME,
			a.NAME_EN,
			a.BIANMA,	
			a.DEPARTMENT_ID,	
			a.TEL,	
			a.SEX,
			a.USER_ID,
			a.IdCard,	
			a.teamId,
			a.dutyId
		from 
		<include refid="tableName"></include> a 
		where 
			NAME in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	
	
	<!-- 绑定用户 -->
	<update id="userBinding" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			USER_ID = #{USER_ID}
		where 
			STAFF_ID = #{STAFF_ID}
	</update>
</mapper>